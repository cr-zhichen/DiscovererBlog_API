name: .NET

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        architecture: ["x64", "arm64"]
        framework: ["net7.0"]

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release --framework ${{ matrix.framework }}
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Publish
        run: dotnet publish --no-build -c Release --framework ${{ matrix.framework }} -o ./publish/${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.framework }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.framework }}
          path: ./publish/${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.framework }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get current version
        id: get_version
        run: echo ::set-output name=VERSION::$(cat version.txt)
      - name: Bump version
        id: bump_version
        run: echo $(( $(echo ${{ steps.get_version.outputs.VERSION }} | awk -F '[.]' '{print $3}') + 1 )) > version.txt
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.stdout }}
          release_name: Release v${{ steps.bump_version.outputs.stdout }}
          draft: false
          prerelease: false
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish/*.zip
          asset_name: ${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.framework }}-${{ steps.bump_version.outputs.stdout }}.zip
          asset_content_type: application/zip
